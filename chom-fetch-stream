#!/usr/bin/env node

var _             = require('underscore');
var Twit  				= require( 'twit' );
var dns						= require( 'dns' );
var args 	        = require( './fetch/stream/args' );
var utils         = require( './libs/utils' );

//
// Input parameters
//
var inputKeywords = program.keywords;
var inputLang     = program.lang; 
var inputRetweets = ( program.retweet ) ? true : false;
var inputURLs     = ( program.url ) ? true : false;
var inputGeoOnly  = ( program.geo ) ? true : false;
var inputCity		 	= program.city

//
// Removing all keywords that are empty strigns
//
inputKeywords = _.filter( inputKeywords, function( keyword ) { 
	return _.isEmpty( keyword ) == false; 
} );

//
// Lower caseing
//
_.each( inputKeywords, function( keyword, idx ) {
	keyword = keyword.toLowerCase();
});

process.stderr.write( "\n" );
process.stderr.write( "* chom-fetch-stream" + "\n" );
process.stderr.write( "  * parameters settings:\n" );
process.stderr.write( "    * keywords          : " + JSON.stringify( inputKeywords ) + "\n" );
process.stderr.write( "    * language          : " + JSON.stringify( inputLang ) + "\n" );
process.stderr.write( "    * include retweets? : " + JSON.stringify( inputRetweets ) + "\n" );
process.stderr.write( "    * include urls?     : " + JSON.stringify( inputURLs ) + "\n" );
process.stderr.write( "    * geo only?         : " + JSON.stringify( inputGeoOnly ) + "\n" );
process.stderr.write( "    * track tweets from : " + JSON.stringify( ( inputCity ) ? inputCity : "everywhere" ) );
process.stderr.write( "\n" );

//
// 
//
function getLocations() {
	var locations = [];

	_.each( inputCity, function( city ) {
		if( city.indexOf( "San Francisco" ) != -1 || city.indexOf( "SF" ) != -1 ) {
			_.each( [ -122.75, 36.8, -121.75, 37.8 ], function( c ) {
				locations.push( c );
			} );
		} 
		else if( city.indexOf( "New York City" ) != -1 || city.indexOf( "NYC" ) != -1 ) {
			_.each( [ -74,40,-73,41 ], function( c ) {
				locations.push( c );
			} );
		}
	} );

	// return locations.join();
	return locations;
}

//
//
//
function onExit() {
	process.stdout.write( "{}\n" );
  utils.releaseCredentials();
  process.exit();
}


function writeData( datum ) {
	var ok = process.stdout.write( JSON.stringify( datum ) + "\n" )
	if(ok == false){
		process.stderr.write("ooops... buffer is full. Skipping a tweet...\n")
	}
}

//
//
//
function printTweet( datum ) {

	if( inputRetweets == false && _.has( datum, "retweeted_status" ) ) {
		return;
	}
	if( inputURLs == false && _.has( datum, "entities" ) ) {
		if( _.has( datum.entities, "urls" ) ) {
			if( datum.entities.urls.length ) {
				return;
			}
		}
	}
	if( inputGeoOnly == true  ) {
		if( _.isUndefined( datum.coordinates ) || _.isNull( datum.coordinates ) ) {
			return;
		}
	}

	datum.created_at = new Date( datum.created_at );

	if( _.isEmpty( inputKeywords ) == false ) {
		var message = datum.text.toLowerCase();
		_.each( inputKeywords, function( keyword ) {
			if( message.indexOf( keyword ) != -1 ) {
				datum.keyword = keyword;
				writeData( datum );
			}
		} );		
	} else {
		writeData( datum );
	}

}

function startStreaming( keywords, lang, callback ) {
		dns.resolve( 'www.google.com', function( err ) {

			if ( err ) {
				streaming = false;
				process.stderr.write( err );
				return;
			}
			
			//
			// If no credentials were passed as input,
			// then lookup the database
			//
			credentials = utils.getCredential();

			//
			// If no credentials were found, then return
			//
			if( _.isEmpty( credentials ) ) {
				process.stderr.write( "* There are no credentials available\n" );
				process.stderr.write( "  Please add new credentials using:\n");
				process.stderr.write( "     chom credentials add\n");
				process.stdout.write( "{}\n" );
				return;
			}

			//
			// Connecting to twitter
			//
			var T = new Twit( credentials );


			var coords = getLocations();
			var options = {};
			options[ "language" ] = lang;
			if( _.isEmpty( keywords ) == false ) {
				options[ "track" ] = keywords;
			}
			if( _.isEmpty( coords ) == false ) {
				options[ "locations" ] = coords;
			}

			//
			// Starting stream of tweets
			//
			var stream = T.stream( "statuses/filter", options );

			//
			// Starting stream
			//
			stream.on( "tweet", callback );
			stream.on( "error", function( err ) { stream.stop(); } );
		} );
	}

//
// Handling signals
//
process.on('SIGINT', onExit );

startStreaming( inputKeywords, inputLang, printTweet );
