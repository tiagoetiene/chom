#!/usr/bin/env node

var utils = require( "./libs/utils" );
var args = require( "./summary/args" );
var TimeTree = require( "./libs/timetree" );
var _ = require( "underscore" );
var AccountsTree = {};
var inputField = program.field;
var inputDepth = program.depth;

process.stderr.write("\n");
process.stderr.write( "* chom-summary" + "\n");
process.stderr.write( "  * parameters settings:" + "\n");
process.stderr.write( "    * field: " + JSON.stringify( inputField ) + "\n" );
process.stderr.write( "    * depth: " + inputDepth + "\n" );
process.stderr.write("\n");

if( !inputField ) {
	process.stderr.write( "\n  * Missing field information\n" );
	program.help();
}

if( !inputDepth ) {
	process.stderr.write( "\n  * Missing max key depth \n" );
	program.help();	
}

utils.readJSONFromSTDIN( function( tweet ) {
	
	if( _.isEmpty( tweet ) ) {
		setTimeout( function() {
			process.stdout.write( JSON.stringify( {} ) + "\n" );
			process.stderr.write("* chom-summary close\n");
			process.exit();	
		}, 5000);
		return;
	}

	var twitter_handle = tweet.keyword;

	if( _.has( AccountsTree, twitter_handle ) == false ) {
		
		function valuer( tweet ) {
			if( _.isNumber( tweet[ inputField ] ) == false )
				return 0.0 
		  	return parseFloat( tweet[ inputField ] );
		}

		AccountsTree[ twitter_handle ] = TimeTree.TimeTree( inputDepth, valuer )
	}
	AccountsTree[ twitter_handle ].add( tweet );

} );

setInterval( summarize, 10000 );

function summarize( ) {
	_.each( AccountsTree, function( timetree, twitter_handle ) {
		for(var depth = 0; depth < inputDepth; ++depth) {

			var data = [];
			_.each( timetree.values( depth ), function( d ) {
				var datum = {}
				datum.date = d.bin
				datum.counter = d.count
				datum.updated = d.updated
				datum[ inputField ] = d.value
				data.push( datum );
			});

			_.each( data, function( datum ) {

				if( datum.updated === true ) {

					timetree.updated( depth, datum.date );

					var out = { 
						twitter_handle : twitter_handle, 
						depth : depth, 
						date : datum.date, 
						counter : datum.counter, 
					}
					out[ inputField ] = datum[ inputField ];

					process.stdout.write( JSON.stringify( out ) + "\n" );
				}
			});
		}
	} );
}
