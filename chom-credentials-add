#!/usr/bin/env node

var mkdirp = require( "mkdirp" );
var Twit   = require( "twit" );
var    _   = require( "underscore" );
var fs 		 = require( "fs" );

var args   = require( "./credentials/add/args" );
var utils  = require('./libs/utils');

var inputFields = program.fields;
var inputConsumerKey    = program.consumerKey;
var inputConsumerSecret = program.consumerSecret;
var inputTokenKey       = program.tokenKey;
var inputTokenSecret    = program.tokenSecret;
var inputName           = program.name;

process.stderr.write( "\n" );
process.stderr.write( "* chom-credentials-add" + "\n" );
process.stderr.write( "  * parameters settings:\n" );
process.stderr.write( "    * --consumer-key   : " + JSON.stringify( inputConsumerKey ) + "\n" );
process.stderr.write( "    * --consumer-secret: " + JSON.stringify( inputConsumerSecret ) + "\n" );
process.stderr.write( "    * --token-key      : " + JSON.stringify( inputTokenKey ) + "\n" );
process.stderr.write( "    * --token-secret   : " + JSON.stringify( inputTokenSecret ) + "\n" );
process.stderr.write( "    * --name           : " + JSON.stringify( inputName ) + "\n" );
process.stderr.write("\n");


//
// Creating Twitter credentials
//
//
var credentials = {
	consumer_key : inputConsumerKey,
  consumer_secret : inputConsumerSecret,
  access_token : inputTokenKey,
  access_token_secret: inputTokenSecret
};

//
// Testing whether those credentials are valid
//
var T = new Twit( credentials );
T.get( "account/verify_credentials", { twit_options: { retry: true } }, 
	function (err, reply, response) {

		if( _.isNull( err ) == false ) {
			if( err.statusCode != 200 ) {
				process.stderr.write( "* Could not verify credentials\n" );
				process.stderr.write( "    * message: " + err.message + "\n" );
				process.stderr.write( "    * statusCode: " + err.statusCode + "\n");
				process.stderr.write( "\n" );
				process.exit();
			}
		}

		//
		// Credentials are ok. Let's save them
		//
		saveCredentials( credentials );

	} 
);

function getUserHome() {
  return process.env[(process.platform == 'win32') ? 'USERPROFILE' : 'HOME'];
}

//
// Save credentials to disk
//
var chomDir = utils.getCHOMDir();
function saveCredentials( _credentials ) {
	mkdirp( chomDir, function(err) { 

		if( err ) {
			throw err;
		}

		var credentials = {
			consumer_key : _credentials.consumer_key,
		  consumer_secret : _credentials.consumer_secret,
		  access_token : _credentials.access_token,
		  access_token_secret: _credentials.access_token_secret
		}

		var credentialsFile = chomDir + "/credentials.json";

		if ( !fs.existsSync( credentialsFile ) ) {
			fs.writeFileSync( credentialsFile, "{}" );
		}

		var credentialsMap = JSON.parse( fs.readFileSync( credentialsFile ) );
		credentialsMap[ inputName ] = credentials;
		fs.writeFileSync( credentialsFile, JSON.stringify( credentialsMap ) );
	} );
}